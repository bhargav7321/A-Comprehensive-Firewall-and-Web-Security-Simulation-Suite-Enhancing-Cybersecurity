import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.HashMap;
import java.util.Map;

public class WebSecuritySimulator {

    public static void main(String[] args) throws Exception {
        simulateRequest();
    }

    public static void simulateRequest() throws Exception {
        String targetUrl = "http://example.com/vulnerable_endpoint";
        String payload = "<script>alert('XSS')</script>";

        // Encode payload
        String encodedPayload = URLEncoder.encode(payload, "UTF-8");

        // Send GET request with encoded payload
        sendGetRequest(targetUrl + "?input=" + encodedPayload);

        // Send POST request with encoded payload
        Map<String, String> postData = new HashMap<>();
        postData.put("input", encodedPayload);
        sendPostRequest(targetUrl, postData);
    }

    public static void sendGetRequest(String url) throws Exception {
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("GET");

        int responseCode = con.getResponseCode();
        System.out.println("GET Request URL: " + url);
        System.out.println("Response Code: " + responseCode);

        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
        String inputLine;
        StringBuffer response = new StringBuffer();

        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine);
        }
        in.close();

        System.out.println("Response Content:");
        System.out.println(response.toString());
    }

    public static void sendPostRequest(String url, Map<String, String> postData) throws Exception {
        URL obj = new URL(url);
        HttpURLConnection con = (HttpURLConnection) obj.openConnection();

        con.setRequestMethod("POST");
        con.setDoOutput(true);

        OutputStreamWriter writer = new OutputStreamWriter(con.getOutputStream());
        StringBuilder postDataString = new StringBuilder();

        for (Map.Entry<String, String> entry : postData.entrySet()) {
            if (postDataString.length() > 0) {
                postDataString.append("&");
            }
            postDataString.append(URLEncoder.encode(entry.getKey(), "UTF-8"));
            postDataString.append("=");
            postDataString.append(URLEncoder.encode(entry.getValue(), "UTF-8"));
        }

        writer.write(postDataString.toString());
        writer.flush();
        writer.close();

        int responseCode = con.getResponseCode();
        System.out.println("\nPOST Request URL: " + url);
        System.out.println("Post Data: " + postDataString);
        System.out.println("Response Code: " + responseCode);

        BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
        String inputLine;
        StringBuffer response = new StringBuffer();

        while ((inputLine = in.readLine()) != null) {
            response.append(inputLine);
        }
        in.close();

        System.out.println("Response Content:");
        System.out.println(response.toString());
    }
}
